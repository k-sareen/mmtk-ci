name: "Continuous Integration"

on:
  pull_request:
    branches:
      - master
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test-linux-x64:
    name: linux-x64
    # needs:
    #   - build-linux-x64
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        debug-level: ["release"]
        gc:
          # SemiSpace
          # GenCopy
          - Immix
          - LXR
          # GenImmix
          # StickyImmix
          # MarkSweep
          # MarkCompact
        benchmark:
          - avrora
          # - batik
          # - biojava
          # - cassandra
          # - eclipse
          - fop
          # - graphchi
          # - h2
          # - h2o
          # - jme
          # - jython
          # - kafka
          # - luindex
          # - lusearch
          # - pmd
          # - spring
          # - sunflow
          # - tomcat
          # # tradebeans
          # # tradesoap
          # - xalan
          # - zxing
    steps:
      - uses: actions/checkout@v3
      - name: Setup environment
        run: |
          pip3 install running-ng
          sudo apt-get update -y
          sudo apt-get install -y build-essential libx11-dev libxext-dev libxrender-dev libxtst-dev libxt-dev libcups2-dev libasound2-dev libxrandr-dev
      - name: Cache DaCapo Chopin git-04132797
        id: dacapo-04132797
        uses: actions/cache@v3
        with:
          path: dacapo/dacapo-evaluation-git-04132797.zip
          key: dacapo-chopin-git-04132797
      - name: Install DaCapo Chopin git-04132797
        if: steps.dacapo-04132797.outputs.cache-hit != 'true'
        run: |
          pip3 install gdown
          mkdir -p dacapo
          pushd dacapo
          gdown "1j4bJkjxEZeUMSQY4JmQwaaQCo-lsQ3Gv"
          popd
      - name: Unzip DaCapo Chopin git-04132797
        run: |
          pushd dacapo
          unzip dacapo-evaluation-git-04132797.zip
          popd
      # name: Download bundles
      # uses: actions/download-artifact@v3
      # with:
      #   name: linux-x86_64-server-${{ matrix.debug-level }}-bundles
      #   path: bundles
      - name: Download OpenJDK
        run: |
          mkdir -p bundles
          pushd bundles
          wget "https://github.com/wenyuzhao/lxr-builds/releases/download/latest/jdk11-linux-x86_64-normal-server-mmtk-lxr-release.tar.gz"
          popd
      # name: Extract OpenJDK
      # run: |
      #   pushd bundles
      #   mkdir -p jdk
      #   tar xvf "*_bin.tar.gz" -C jdk --strip-components=1
      #   popd
      - name: Extract OpenJDK
        run: |
          pushd bundles
          mkdir -p jdk
          tar xvf *.tar.gz -C jdk --strip-components=1
          popd
      - name: Run DaCapo Chopin git-04132797 ${{ matrix.benchmark }} on MMTk OpenJDK ${{ matrix.debug-level }} with 2.5x MarkCompact minheap
        run: |
          source .github/scripts/common.sh
          DACAPO_PATH=`realpath $DACAPO_PATH`
          sed -i "s;DACAPO_PATH;$DACAPO_PATH;g" .github/configs/base.yml
          echo "    - ${{ matrix.benchmark }}\n\nconfigs:" >> .github/configs/base.yml
          echo "  - \"jdk11-master|ms|s|c2|mmtk_gc-${{ matrix.gc }}|tph\"" >> .github/configs/base.yml
          running runbms /tmp .github/configs/base.yml -s 2.5 -p linux-x86_64-${{ matrix.benchmark }}-${{ matrix.gc }}-${{ matrix.debug-level }}
      - name: Upload running artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-x86_64-${{ matrix.benchmark }}-${{ matrix.gc }}-${{ matrix.debug-level }}
          path: /tmp/linux-x86_64-${{ matrix.benchmark }}-${{ matrix.gc }}-${{ matrix.debug-level }}-*
          retention-days: 1
